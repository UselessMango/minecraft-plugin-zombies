package com.mango.zombies.entities;

import com.google.gson.annotations.Expose;
import com.mango.zombies.PluginCore;
import org.bukkit.Material;

import java.util.TimerTask;

public class ConfigEntity {

	//region Constant Values
	public static final boolean DEFAULT_AUTO_GENERATE_DEFAULT_ENEMIES = true;
	public static final boolean DEFAULT_AUTO_GENERATE_DEFAULT_PERKS = true;
	public static final boolean DEFAULT_AUTO_GENERATE_DEFAULT_WEAPONS = true;
	public static final boolean DEFAULT_ENABLE_DEBUGGING = false;

	public static final int DEFAULT_AUTO_SAVE_TIMER_INTERVAL = 10;

	public static final Material DEFAULT_POSITION_TOOL_ITEM = Material.STICK;
	public static final Material DEFAULT_SPAWNING_TOOL_ITEM = Material.STICK;
	//endregion

	//region Fields
	@Expose private boolean autoGenerateDefaultEnemies = DEFAULT_AUTO_GENERATE_DEFAULT_ENEMIES;
	@Expose private boolean autoGenerateDefaultPerks = DEFAULT_AUTO_GENERATE_DEFAULT_PERKS;
	@Expose private boolean autoGenerateDefaultWeapons = DEFAULT_AUTO_GENERATE_DEFAULT_WEAPONS;
	@Expose private boolean enableDebugging = DEFAULT_ENABLE_DEBUGGING;

	@Expose private int autoSaveTimerInterval = DEFAULT_AUTO_SAVE_TIMER_INTERVAL;

	@Expose private Material positionToolItem = DEFAULT_POSITION_TOOL_ITEM;
	@Expose private Material spawningToolItem = DEFAULT_SPAWNING_TOOL_ITEM;
	//endregion

	//region Getters/Setters
	/**
	 * Gets whether default enemies should be generated automatically.
	 */
	public boolean doesAutoGenerateDefaultEnemies() {
		return autoGenerateDefaultEnemies;
	}

	/**
	 * Sets whether default enemies should be generated automatically.
	 */
	public void setAutoGenerateDefaultEnemies(boolean autoGenerateDefaultEnemies) {
		this.autoGenerateDefaultEnemies = autoGenerateDefaultEnemies;
	}

	/**
	 * Gets whether default perks should be generated automatically.
	 */
	public boolean doesAutoGenerateDefaultPerks() {
		return autoGenerateDefaultPerks;
	}

	/**
	 * Sets whether default perks should be generated automatically.
	 */
	public void setAutoGenerateDefaultPerks(boolean autoGenerateDefaultPerks) {
		this.autoGenerateDefaultPerks = autoGenerateDefaultPerks;
	}

	/**
	 * Gets whether default weapons should be generated automatically.
	 */
	public boolean doesAutoGenerateDefaultWeapons() {
		return autoGenerateDefaultWeapons;
	}

	/**
	 * Sets whether default weapons should be generated automatically.
	 */
	public void setAutoGenerateDefaultWeapons(boolean autoGenerateDefaultWeapons) {
		this.autoGenerateDefaultWeapons = autoGenerateDefaultWeapons;
	}

	/**
	 * Gets the interval between auto-saves (minutes).
	 */
	public int getAutoSaveTimerInterval() {
		return autoSaveTimerInterval;
	}

	/**
	 * Sets the interval between auto-saves (minutes).
	 */
	public void setAutoSaveTimerInterval(int autoSaveTimerInterval) {

		this.autoSaveTimerInterval = autoSaveTimerInterval < 1 ? DEFAULT_AUTO_SAVE_TIMER_INTERVAL : autoSaveTimerInterval;

		int delay = autoSaveTimerInterval * 60 * 1000;

		PluginCore.getFilingService().getAutoSaveTimer().scheduleAtFixedRate(new TimerTask() {
			@Override
			public void run() {
				PluginCore.autoSave();
			}
		}, delay, delay);
	}

	/**
	 * Gets whether debugging is currently enabled.
	 */
	public boolean isDebuggingEnabled() {
		return enableDebugging;
	}

	/**
	 * Sets whether debugging is enabled.
	 */
	public void setEnableDebugging(boolean enableDebugging) {
		this.enableDebugging = enableDebugging;
	}

	/**
	 * Gets the position tool item.
	 */
	public Material getPositionToolItem() {
		return positionToolItem;
	}

	/**
	 * Sets the position tool item.
	 */
	public void setPositionToolItem(Material positionToolItem) {
		this.positionToolItem = positionToolItem;
	}

	/**
	 * Gets the spawning tool item
	 */
	public Material getSpawningToolItem() {
		return spawningToolItem;
	}

	/**
	 * Sets the spawning tool item.
	 */
	public void setSpawningToolItem(Material spawningToolItem) {
		this.spawningToolItem = spawningToolItem;
	}
	//endregion
}