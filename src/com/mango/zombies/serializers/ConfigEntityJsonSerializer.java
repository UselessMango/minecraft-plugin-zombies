package com.mango.zombies.serializers;

import com.google.gson.*;
import com.mango.zombies.entities.ConfigEntity;
import com.mango.zombies.entities.WeaponConfigEntity;
import org.bukkit.Material;

import java.lang.reflect.Type;

public class ConfigEntityJsonSerializer implements JsonSerializer<ConfigEntity>, JsonDeserializer<ConfigEntity> {

    //region Public Methods
    @Override
    public ConfigEntity deserialize(JsonElement jsonElement, Type type, JsonDeserializationContext jsonDeserializationContext) {

        JsonObject jsonObject = jsonElement.getAsJsonObject();

        ConfigEntity config = new ConfigEntity();

        JsonElement autoGenerateDefaultEnemiesJsonElement = jsonObject.get(ConfigEntity.AUTO_GENERATE_DEFAULT_ENEMIES_JSON_TAG);
        JsonElement autoGenerateDefaultPerksJsonElement = jsonObject.get(ConfigEntity.AUTO_GENERATE_DEFAULT_PERKS_JSON_TAG);
        JsonElement autoGenerateDefaultWeaponsJsonElement = jsonObject.get(ConfigEntity.AUTO_GENERATE_DEFAULT_WEAPONS_JSON_TAG);
        JsonElement autoSaveIntervalJsonElement = jsonObject.get(ConfigEntity.AUTO_SAVE_TIMER_INTERVAL_JSON_TAG);
        JsonElement debuggingEnabledJsonElement = jsonObject.get(ConfigEntity.ENABLE_DEBUGGING_JSON_TAG);
        JsonElement positionToolItemJsonElement = jsonObject.get(ConfigEntity.POSITION_TOOL_ITEM_JSON_TAG);
        JsonElement spawningToolItemJsonElement = jsonObject.get(ConfigEntity.SPAWNING_TOOL_ITEM_JSON_TAG);

        if (autoGenerateDefaultEnemiesJsonElement != null)
            config.setAutoGenerateDefaultEnemies(autoGenerateDefaultEnemiesJsonElement.getAsBoolean());

        if (autoGenerateDefaultPerksJsonElement != null)
            config.setAutoGenerateDefaultPerks(autoGenerateDefaultPerksJsonElement.getAsBoolean());

        if (autoGenerateDefaultWeaponsJsonElement != null)
            config.setAutoGenerateDefaultWeapons(autoGenerateDefaultWeaponsJsonElement.getAsBoolean());

        if (autoSaveIntervalJsonElement != null)
            config.setAutoSaveTimerInterval(autoSaveIntervalJsonElement.getAsInt());

        if (debuggingEnabledJsonElement != null)
            config.setEnableDebugging(debuggingEnabledJsonElement.getAsBoolean());

        if (positionToolItemJsonElement != null)
            config.setPositionToolItem(Material.valueOf(positionToolItemJsonElement.getAsString()));

        if (spawningToolItemJsonElement != null)
            config.setSpawningToolItem(Material.valueOf(spawningToolItemJsonElement.getAsString()));

        return config;
    }

    @Override
    public JsonElement serialize(ConfigEntity configEntity, Type type, JsonSerializationContext jsonSerializationContext) {

        JsonObject jsonObject = new JsonObject();

        jsonObject.add(ConfigEntity.AUTO_GENERATE_DEFAULT_ENEMIES_JSON_TAG, new JsonPrimitive(configEntity.doesAutoGenerateDefaultEnemies()));
        jsonObject.add(ConfigEntity.AUTO_GENERATE_DEFAULT_PERKS_JSON_TAG, new JsonPrimitive(configEntity.doesAutoGenerateDefaultPerks()));
        jsonObject.add(ConfigEntity.AUTO_GENERATE_DEFAULT_WEAPONS_JSON_TAG, new JsonPrimitive(configEntity.doesAutoGenerateDefaultWeapons()));
        jsonObject.add(ConfigEntity.AUTO_SAVE_TIMER_INTERVAL_JSON_TAG, new JsonPrimitive(configEntity.getAutoSaveTimerInterval()));
        jsonObject.add(ConfigEntity.ENABLE_DEBUGGING_JSON_TAG, new JsonPrimitive(configEntity.isDebuggingEnabled()));
        jsonObject.add(ConfigEntity.POSITION_TOOL_ITEM_JSON_TAG, new JsonPrimitive(configEntity.getPositionToolItem().name()));
        jsonObject.add(ConfigEntity.SPAWNING_TOOL_ITEM_JSON_TAG, new JsonPrimitive(configEntity.getSpawningToolItem().name()));

        return jsonObject;
    }
    //endregion
}
